---
import Icon from "$components/Icon.astro";
import i18nit from "$i18n";

export interface Props {
  locale: string;
}

const { locale } = Astro.props;

const t = i18nit(locale);
---

<style lang="less">
  figure {
    button {
      position: relative;
      border-width: 2px;
      border-style: solid;

      border-radius: 50%;
      padding: 5px;

      background-color: var(--background-color);

      --uno: shadow-md;
    }
  }
</style>

<figure class="fixed right-[calc(20px+max(calc((100%-1100px)/2),0px))] bottom-5 sm:bottom-30 flex flex-col gap-2">
  <button aria-label="Scroll to Top" class="b-weak" onclick="document.scrollingElement?.scrollTo({top: 0, behavior: 'smooth'})">
    <Icon name="lucide:arrow-up-to-line" size={15} title={t("note.top")} />
    <svg class="absolute top--2px left--2px w-[calc(100%+4px)] h-[calc(100%+4px)] transform-origin-center pointer-events-none">
      <circle id="progress-circle" cx="50%" cy="50%" r="calc(50% - 1px)" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" pathLength="100" stroke-dasharray="100" stroke-dashoffset="100"></circle>
    </svg>
  </button>
</figure>

<script>
  function updateProgress() {
    const content = document.querySelector("#markdown-content") as HTMLElement;
    if (content) {
      const progress = Math.min(1, Math.max(0, window.scrollY - content.offsetTop) / content.clientHeight);
      const circle = document.getElementById("progress-circle");
      if (circle) circle.style.strokeDashoffset = `${100 * (1 - progress)}`;
    }
  }

  window.addEventListener("scroll", updateProgress);
  updateProgress();
</script>
